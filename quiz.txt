--PARTE I

--1. Cree un tablespace con el nombre 'quiz_manana' y tres archivos de datos. Cada archivo de datos de 30Mb.
--2. Cree un perfil con tiempo de inactividad de 15 minutos, el nombre del perfil debe ser 'estudiante_quiz'
--3. Cree un usuario llamado "carlos_2" con la contraseña "carlos_2".
-- El usuario debería poder conectarse
-- El usuario debe tener el perfil "estudiante_quiz"
-- El usuario debe estar asociado al tablespace "quiz_manana"
-- El usuario debería poder crear tablas SIN USAR EL ROL DBA.
--4. Cree un usuario llamado "usuario2" con la contraseña "usuario2"
-- El usuario debería poder conectarse
-- El usuario debe tener el perfil "estudiante_quiz"
-- El usuario debe estar asociado al tablespace "quiz_manana"
-- El usuario no debería poder crear tablas.




CREATE TABLESPACE quiz_manana
DATAFILE '/u01/app/oracle/oradata/XE/db_quiz_manana1.dbf' SIZE 30M,
'/u01/app/oracle/oradata/XE/db_quiz_manana2.dbf' SIZE 30M,
'/u01/app/oracle/oradata/XE/db_quiz_manana3.dbf' SIZE 30M
EXTENT MANAGEMENT LOCAL AUTOALLOCATE;
--ejecutado

CREATE USER carlos_2
IDENTIFIED BY carlos_2
DEFAULT TABLESPACE quiz_manana2;
GRANT CONNECT TO carlos_2;

ALTER USER carlos_2
IDENTIFIED BY carlos_2
QUOTA  UNLIMITED  ON quiz_manana;

CREATE ROLE estudiante_quiz;
GRANT CONNECT TO estudiante_quiz;

CREATE PROFILE estudiante_quiz2
  LIMIT PASSWORD_REUSE_MAX 10
        PASSWORD_REUSE_TIME 15;
   
alter profile estudiante_quiz2 limit
connect_time 180000
sessions_per_user 2
idle_time 15;

GRANT estudiante_quiz TO carlos_2;

Alter user carlos_2 profile estudiante_quiz2;

GRANT CREATE TABLE TO carlos_2;

CREATE USER usuario2
IDENTIFIED BY usuario2
DEFAULT TABLESPACE quiz_manana;
GRANT CONNECT TO usuario2;

ALTER USER usuario2
IDENTIFIED BY usuario2
QUOTA UNLIMITED ON quiz_manana;

GRANT estudiante_quiz TO usuario2;


/*PARTE II
1. Con carlos_2 crea la siguiente tabla (NO CAMBIE EL NOMBRE DE LA MESA NI LAS COLUMNAS:*/


create table icfes (
	tipo_documento 	varchar2(255),
	nacionalidad		varchar2(255),
	genero					varchar2(255),
	fecha_nacimiento	date,
	periodo					varchar2(255),
	consecutivo			varchar2(255),
	departamento_residencia	varchar2(255),
	codigo_departamento_residencia	integer,
	municipio_residencia		varchar2(255),
	codigo_municipio_residencia	varchar2(255),
	estrato					varchar2(255),
	educacion_padre	varchar2(255),
	educacion_madre	varchar2(255),
	tiene_internet	varchar2(255),
	tiene_tv				varchar2(255),
	tiene_lavadora	varchar2(255),
	tiene_horno_micro_o_gas	varchar2(255),
	tiene_automovil	varchar2(255),
	tiene_motocicleta	varchar2(255),
	tiene_consola_videojuegos	varchar2(255),
	colegio_codigo_icfes	varchar2(255),
	colegio_codigo_dane		varchar2(255),
	colegio_nombre				varchar2(255),
	puntaje_lectura_critica	integer,
	puntaje_matematicas		integer,
	puntaje_ciencias_naturales	integer,
	puntaje_sociales			integer,
	puntaje_ingles				integer,
	desempeno_ingles			varchar2(255),
	puntaje_global				integer
);


/*PARTE III

Consultas:

1. MOSTRAR EL GÉNERO, FECHA DE NACIMIENTO, SECUENCIA (CONSECUTIVO), MUNICIPIO, PUNTUACIÓN GLOBAL (PUNTAJE GLOBAL) DEL ESTUDIANTE MÁS ANTIGUO
2. MOSTRAR EL GÉNERO, FECHA DE NACIMIENTO, SECUENCIA (CONSECUTIVO), MUNICIPIO, PUNTUACIÓN GLOBAL (PUNTAJE GLOBAL) DE LOS ESTUDIANTES QUE TIENEN UN B1 EN DESEMPEÑO DE INGLÉS
3. CUENTE EL NÚMERO COLEGIO_NOMBRE SIN REPETICIÓN (VALORES ÚNICOS) DE LOS ESTUDIANTES
4. CUENTA EL NÚMERO DE ESTUDIANTES QUE ESTÁN UBICADOS EN PASTO*/

SELECT 
	genero,
	fecha_nacimiento,
	consecutivo,
	municipio_residencia,
	codigo_municipio_residencia,
	puntaje_global				
FROM icfes
WHERE ROWNUM = 1
ORDER BY fecha_nacimiento DESC;


SELECT 
	genero,
	fecha_nacimiento,
	consecutivo,
	municipio_residencia,
	codigo_municipio_residencia,
	puntaje_global				
FROM icfes
WHERE desempeno_ingles ='B1';

SELECT DISTINCT COUNT(COLEGIO_NOMBRE)
FROM icfes;

SELECT COUNT(consecutivo)
FROM icfes
WHERE municipio_residencia ='PASTO';

